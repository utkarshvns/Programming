{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Tensorflow.MNIST","provenance":[],"authorship_tag":"ABX9TyMoNadeG1YVBVEy9Vs/VilT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"S3NDVXgw7-ZY"},"source":["# Multi-class classification (MNIST) using Tensorflow\n","\n","The [MNIST dataset](http://yann.lecun.com/exdb/mnist/) contains images of handwritten digits (0 to 9). The task is to recognize the digit (in other words, classify the image into one of the 10 possible classes). "]},{"cell_type":"markdown","metadata":{"id":"yxJmlV9R8l4W"},"source":["## 1. Loading the data\n","\n","Keras has the MNIST database inbuilt in it, so we can load the data from Keras directly. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2O1kE2g53bip","executionInfo":{"status":"ok","timestamp":1611833539699,"user_tz":-330,"elapsed":5113,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}},"outputId":"ad2964cb-bc53-4de4-bbf3-fab1daefaa61"},"source":["import tensorflow as tf\n","\n","mnist = tf.keras.datasets.mnist\n","\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Eg-iDNRz9Vs4"},"source":["The data has 60,000 images in the training set and 10,000 images in the test set. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bOO8mehP7a9j","executionInfo":{"status":"ok","timestamp":1611833539700,"user_tz":-330,"elapsed":5101,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}},"outputId":"6b5f9fca-ddd6-4493-b1f4-5f201211bbf6"},"source":["print(x_train.shape, y_train.shape, x_test.shape, y_test.shape)\n","\n","print(y_train)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["(60000, 28, 28) (60000,) (10000, 28, 28) (10000,)\n","[5 0 4 ... 5 6 8]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"YGJ8-JMD9CCe"},"source":["## 2. Converting the values to floating point numbers in the range $[0,1]$."]},{"cell_type":"code","metadata":{"id":"tHEGZlyk8_gz","executionInfo":{"status":"ok","timestamp":1611833539700,"user_tz":-330,"elapsed":5092,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}}},"source":["x_train, x_test = x_train / 255.0, x_test / 255.0"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PFTcfpSl9fem"},"source":["## 3. Building a (sequential) model\n","\n","We will use some version of the sequential model (which corresponds to a deep feedforward network). The simplest version would be the 1-layer logistic regression. We can try with other complex models too. "]},{"cell_type":"code","metadata":{"id":"9awYKmKR7jFn","executionInfo":{"status":"ok","timestamp":1611833545676,"user_tz":-330,"elapsed":11065,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}}},"source":["# 1-layer with a softmax output layer\n","model = tf.keras.models.Sequential([\n","  tf.keras.layers.Flatten(input_shape=(28, 28)),\n","  tf.keras.layers.Dense(10, activation='softmax')\n","])"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"-I33EuhiiRfC","executionInfo":{"status":"ok","timestamp":1611833545678,"user_tz":-330,"elapsed":11062,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}}},"source":["# The model suggested in Tensorflow quickstart tutorial\n","model = tf.keras.models.Sequential([\n","  tf.keras.layers.Flatten(input_shape=(28, 28)),\n","  tf.keras.layers.Dense(128, activation='relu'),\n","  tf.keras.layers.Dropout(0.2),\n","  tf.keras.layers.Dense(10, activation='softmax')\n","  #tf.keras.layers.Dense(10, activation=None)\n","])"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VWywng1F-NZt"},"source":["## 4. The loss function\n","\n","The loss function needs to be the MLE. Since there are many classes and they are represented as integers (0 to 9), the SparseCategoricalCrossEntropy is used. If we use <tt>activation = None</tt> in the output layer, we need to use <tt>from_logits = True</tt> in the cost function. "]},{"cell_type":"code","metadata":{"id":"bXRMq1or-ftQ","executionInfo":{"status":"ok","timestamp":1611833545679,"user_tz":-330,"elapsed":11057,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}}},"source":["loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False)"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dGdFL6WH_Lky"},"source":["# 5. The Optimizer\n","\n","We may use SGD, Adam, or [any other optimizer](https://keras.io/api/optimizers/) with defult parameters, or specify a learning rate. "]},{"cell_type":"code","metadata":{"id":"GltyFH5T_GYJ","executionInfo":{"status":"ok","timestamp":1611833545680,"user_tz":-330,"elapsed":11054,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}}},"source":["mysgd = tf.keras.optimizers.SGD(learning_rate=0.0075)"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pSzVtogO_oFv"},"source":["## 6. Defining the model"]},{"cell_type":"code","metadata":{"id":"--rw5HO__IHk","executionInfo":{"status":"ok","timestamp":1611833545681,"user_tz":-330,"elapsed":11052,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}}},"source":["model.compile(optimizer='adam',\n","              loss=loss_fn,\n","              metrics=['accuracy'])"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vTJGOxku_u6A"},"source":["## 7. Training the model \n","\n","We can specify number of epochs, validation data, batch_size, and many other parameters. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mjwVehtq-xFi","executionInfo":{"status":"ok","timestamp":1611833645785,"user_tz":-330,"elapsed":75123,"user":{"displayName":"Debapriyo Majumdar","photoUrl":"https://lh3.googleusercontent.com/-27XCrbxqp0c/AAAAAAAAAAI/AAAAAAACj60/QkRLriepZzA/s64/photo.jpg","userId":"00543863801161595698"}},"outputId":"f3f81ebe-fe83-4841-e93b-0fbfbc8e9ada"},"source":["tf.keras.backend.clear_session()\n","trained_model = model.fit(x_train, y_train, validation_data = (x_test, y_test), batch_size=32, epochs=15)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Epoch 1/15\n","1875/1875 [==============================] - 7s 3ms/step - loss: 0.4800 - accuracy: 0.8618 - val_loss: 0.1417 - val_accuracy: 0.9615\n","Epoch 2/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.1499 - accuracy: 0.9553 - val_loss: 0.1021 - val_accuracy: 0.9691\n","Epoch 3/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.1103 - accuracy: 0.9666 - val_loss: 0.0867 - val_accuracy: 0.9721\n","Epoch 4/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0804 - accuracy: 0.9759 - val_loss: 0.0772 - val_accuracy: 0.9760\n","Epoch 5/15\n","1875/1875 [==============================] - 5s 2ms/step - loss: 0.0723 - accuracy: 0.9775 - val_loss: 0.0786 - val_accuracy: 0.9749\n","Epoch 6/15\n","1875/1875 [==============================] - 5s 2ms/step - loss: 0.0674 - accuracy: 0.9786 - val_loss: 0.0723 - val_accuracy: 0.9781\n","Epoch 7/15\n","1875/1875 [==============================] - 5s 2ms/step - loss: 0.0541 - accuracy: 0.9824 - val_loss: 0.0720 - val_accuracy: 0.9777\n","Epoch 8/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0504 - accuracy: 0.9837 - val_loss: 0.0697 - val_accuracy: 0.9794\n","Epoch 9/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0448 - accuracy: 0.9850 - val_loss: 0.0646 - val_accuracy: 0.9815\n","Epoch 10/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0394 - accuracy: 0.9873 - val_loss: 0.0705 - val_accuracy: 0.9815\n","Epoch 11/15\n","1875/1875 [==============================] - 5s 2ms/step - loss: 0.0422 - accuracy: 0.9861 - val_loss: 0.0770 - val_accuracy: 0.9800\n","Epoch 12/15\n","1875/1875 [==============================] - 5s 2ms/step - loss: 0.0371 - accuracy: 0.9877 - val_loss: 0.0767 - val_accuracy: 0.9791\n","Epoch 13/15\n","1875/1875 [==============================] - 5s 2ms/step - loss: 0.0320 - accuracy: 0.9895 - val_loss: 0.0707 - val_accuracy: 0.9813\n","Epoch 14/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0323 - accuracy: 0.9894 - val_loss: 0.0751 - val_accuracy: 0.9798\n","Epoch 15/15\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0317 - accuracy: 0.9897 - val_loss: 0.0799 - val_accuracy: 0.9793\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UfwWonkv_FxG"},"source":[""],"execution_count":null,"outputs":[]}]}